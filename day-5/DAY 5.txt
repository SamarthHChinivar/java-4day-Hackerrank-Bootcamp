4.Subarray Division:
--------------------
Diagram 1

import java.util.*;

class Ex4
{
	static int birthday(List<Integer> s, int d, int m)
	{
	int count = 0 ;
	for (int i = 0; i<= s.size()-m ;i++ )
	{
		int sum = 0;
		for (int j=i; j<i+m; j++)
		{
			sum = sum +s.get(j);
		}
		if (sum==d)
		{
			count++;
		}
			
	}
	return count;
	}

	public static void main(String[] args) 
	{
	
	List<Integer> scores = Arrays.asList(2,2,1,3,2);
	System.out.println(scores);
    System.out.println(birthday(scores,4,2));
	}
}

o/p:
----
[2, 2, 1, 3, 2]
2
--------------------------------------------------------------------------------------------

12. Sherlock and Array:
-----------------------
Diagram 2

import java.util.*;

class Ex12
{
     static String balancedSums(List<Integer> arr)
	{
   
     int totalSum = 0;
     int leftSum = 0;
     int rightSum = 0;
     
     for (int i=0;i < arr.size(); i++)
     {
        totalSum = totalSum + arr.get(i);
     }

	 for (int i = 0; i < arr.size(); i++)
     {
        rightSum = totalSum - arr.get(i) - leftSum;

        if (leftSum == rightSum)
        {
            return "YES";
        }
        else
        {
            leftSum = leftSum + arr.get(i);
        }
        
     }

     return "NO";

	}

	public static void main(String[] args) 
	{
	List<Integer> arr = Arrays.asList(1,1,4,1,1);
	System.out.println(arr);
    System.out.println(balancedSums(arr));
	}
}

o/p:
----
YES 

-----------------------------------------------------------------------------------------


















































